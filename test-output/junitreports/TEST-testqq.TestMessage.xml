<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="testqq.TestMessage" tests="3" time="6.739" ignored="6" failures="0" timestamp="24 三月 2018 13:32:43 GMT" skipped="0" hostname="dell" errors="2">
  <testcase name="operation" time="6.659" classname="testqq.TestMessage"/>
  <testcase name="tearDown" time="0.000" classname="testqq.TestMessage">
    <error type="org.openqa.selenium.NoSuchSessionException" message="A session is either terminated or not started (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &#039;3.6.0&#039;, revision: &#039;6fbf3ec767&#039;, time: &#039;2017-09-27T15:28:36.4Z&#039;
System info: host: &#039;DELL&#039;, ip: &#039;10.198.1.22&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_112-release&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{app=, appPackage=com.tencent.mobileqq, noReset=true, noSign=true, deviceName=8bf38460, platform=ANDROID, appActivity=com.tencent.mobileqq.activity.SplashActivity, platformVersion=7.0, automationName=UIAutomator2, javascriptEnabled=true, unicodeKeyboard=true, udid=8bf38460, platformName=ANDROID, resetKeyboard=true}]
Session ID: 2ce8c668-1807-4263-bdba-9bcb5754e5b4">
      <![CDATA[org.openqa.selenium.NoSuchSessionException: A session is either terminated or not started (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'DELL', ip: '10.198.1.22', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_112-release'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{app=, appPackage=com.tencent.mobileqq, noReset=true, noSign=true, deviceName=8bf38460, platform=ANDROID, appActivity=com.tencent.mobileqq.activity.SplashActivity, platformVersion=7.0, automationName=UIAutomator2, javascriptEnabled=true, unicodeKeyboard=true, udid=8bf38460, platformName=ANDROID, resetKeyboard=true}]
Session ID: 2ce8c668-1807-4263-bdba-9bcb5754e5b4
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:482)
	at yph.base.BaseTest.tearDown(BaseTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:144)
	at org.testng.TestRunner.afterRun(TestRunner.java:983)
	at org.testng.TestRunner.run(TestRunner.java:614)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </error>
  </testcase> <!-- tearDown -->
  <testcase name="operation" time="0.080" classname="testqq.TestMessage">
    <error type="java.lang.IndexOutOfBoundsException" message="Index: 0, Size: 0">
      <![CDATA[java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
	at com.sun.proxy.$Proxy11.get(Unknown Source)
	at testqq.TestMessage.operation(TestMessage.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </error>
  </testcase> <!-- operation -->
  <testcase name="tearDown" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="startServer" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- startServer -->
  <testcase name="startServer" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- startServer -->
  <testcase name="setUp" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- setUp -->
  <testcase name="setUp" classname="yph.base.BaseTest">
    <skipped/>
  </testcase> <!-- setUp -->
</testsuite> <!-- testqq.TestMessage -->
